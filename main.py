import json
import requests
from time import sleep

TOKEN = "8162382973:AAFUoO9JdktTBE6lzHjhMAjHf2jBgvl8sMw"
JSON_FILE = "data.json"
USERS_FILE = "users.json"  # –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
API_URL = f"https://api.telegram.org/bot{TOKEN}/"


# –ó–∞–≥—Ä—É–∑–∫–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
def load_data():
    try:
        with open(JSON_FILE, "r") as f:
            data = json.load(f)
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω—É–ª–µ–≤–æ–π –ø—É–Ω–∫—Ç, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            if not data.get("items") or not any(item.get("is_reset") for item in data["items"]):
                data["items"] = [create_reset_item()] + data.get("items", [])
            return data
    except (FileNotFoundError, json.JSONDecodeError):
        return {"items": [create_reset_item()]}


def save_data(data):
    with open(JSON_FILE, "w") as f:
        json.dump(data, f, indent=2)


# –ó–∞–≥—Ä—É–∑–∫–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
def load_users():
    try:
        with open(USERS_FILE, "r") as f:
            return json.load(f)
    except (FileNotFoundError, json.JSONDecodeError):
        return {"users": []}


def save_users(users_data):
    with open(USERS_FILE, "w") as f:
        json.dump(users_data, f, indent=2)


def add_user(user_id):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞—Å—Å—ã–ª–∫–∏"""
    users_data = load_users()
    if user_id not in users_data["users"]:
        users_data["users"].append(user_id)
        save_users(users_data)


def create_reset_item():
    """–°–æ–∑–¥–∞–µ—Ç –Ω—É–ª–µ–≤–æ–π –ø—É–Ω–∫—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å–ø–∏—Å–∫–∞"""
    return {
        "text": "‚ùå –û—á–∏—Å—Ç–∏—Ç—å –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ (–Ω—É–∂–Ω–æ 3 –≥–æ–ª–æ—Å–∞)",
        "votes": 0,
        "voted_users": [],
        "is_reset": True  # –§–ª–∞–≥, —á—Ç–æ —ç—Ç–æ –ø—É–Ω–∫—Ç –¥–ª—è —Å–±—Ä–æ—Å–∞
    }


# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
def send_message(chat_id, text):
    try:
        requests.post(
            API_URL + "sendMessage",
            json={"chat_id": chat_id, "text": text, "parse_mode": "Markdown"},
            timeout=10
        )
    except requests.exceptions.RequestException:
        pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏


def broadcast_message(text):
    """–†–∞—Å—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"""
    users_data = load_users()
    for user_id in users_data["users"]:
        send_message(user_id, text)
        sleep(0.1)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ–≤—ã—Å–∏—Ç—å –ª–∏–º–∏—Ç—ã API


# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞
def get_help_message():
    return """
*üìö –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞:*

–±–æ—Ç –¥–ª—è –ø–æ–º–æ—â–∏ —Å –ø–æ–¥–∫–∞—Å—Ç–∞–º–∏.

*/start* - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ
*/add <—Ç–µ–∫—Å—Ç>* - –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –ø—É–Ω–∫—Ç –≤ —Å–ø–∏—Å–æ–∫
*/list* - –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫
*/run <–Ω–æ–º–µ—Ä>* - –ü—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞—Ç—å –∑–∞ —É–¥–∞–ª–µ–Ω–∏–µ –ø—É–Ω–∫—Ç–∞

*–ü—Ä–∏–º–µ—Ä—ã:*
`/add –ø—Ä–æ —á–∞–π`
`/list`
`/run 1` –≥–æ–ª–æ—Å –∑–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Ç–µ–º—ã
`/run 0` –≥–æ–ª–æ—Å –∑–∞ –æ—á–∏—Å—Ç–∫—É –≤—Å–µ–≥–æ —Å–ø–∏—Å–∫–∞

–ö–æ–≥–¥–∞ –ø—É–Ω–∫—Ç –ø–æ–ª—É—á–∞–µ—Ç 2 –≥–æ–ª–æ—Å–∞ - –æ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ—Ç—Å—è!
–î–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ–≥–æ —Å–ø–∏—Å–∫–∞ –Ω—É–∂–Ω–æ 3 –≥–æ–ª–æ—Å–∞ –∑–∞ –ø—É–Ω–∫—Ç 0.
"""


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
def process_command(chat_id, command, args, user_id):
    if command == "start":
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞—Å—Å—ã–ª–∫–∏ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
        add_user(user_id)
        return get_help_message()

    data = load_data()

    if command == "add":
        if not args:
            return "‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /add <—Ç–µ–∫—Å—Ç>"

        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø—É–Ω–∫—Ç–∞
        add_user(user_id)

        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –ø—É–Ω–∫—Ç –ø–æ—Å–ª–µ –Ω—É–ª–µ–≤–æ–≥–æ
        new_item_text = " ".join(args)
        new_item = {
            "text": new_item_text,
            "votes": 0,
            "voted_users": [],
            "is_reset": False
        }
        data["items"].append(new_item)
        save_data(data)
        
        # –†–∞—Å—Å—ã–ª–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
        broadcast_message(f"üìù –î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –ø—É–Ω–∫—Ç: '{new_item_text}'")
        
        return f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: '{new_item_text}'"

    elif command == "list":
        if len(data["items"]) <= 1:  # –¢–æ–ª—å–∫–æ –Ω—É–ª–µ–≤–æ–π –ø—É–Ω–∫—Ç
            return "üì≠ –°–ø–∏—Å–æ–∫ –ø—É—Å—Ç"

        return "üìã –°–ø–∏—Å–æ–∫:\n" + "\n".join(
            f"{i}. {item['text']} (–ì–æ–ª–æ—Å–æ–≤: {item['votes']})"
            for i, item in enumerate(data["items"])
        )

    elif command == "run":
        if not args:
            return "‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /run <–Ω–æ–º–µ—Ä>"

        try:
            num = int(args[0])
        except ValueError:
            return "‚ùå –ù–æ–º–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º"

        if num < 0 or num >= len(data["items"]):
            return "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –ø—É–Ω–∫—Ç–∞"

        item = data["items"][num]
        if user_id in item["voted_users"]:
            return "‚ö†Ô∏è –í—ã —É–∂–µ –≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ –∑–∞ —ç—Ç–æ—Ç –ø—É–Ω–∫—Ç"

        item["votes"] += 1
        item["voted_users"].append(user_id)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ (2 –≥–æ–ª–æ—Å–∞)
        if not item.get("is_reset", False) and item["votes"] >= 2:
            removed_item = data["items"].pop(num)
            save_data(data)
            # –†–∞—Å—Å—ã–ª–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± —É–¥–∞–ª–µ–Ω–∏–∏
            broadcast_message(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ: '{removed_item['text']}'")
            return f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ: '{removed_item['text']}'"

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω—É–ª–µ–≤–æ–≥–æ –ø—É–Ω–∫—Ç–∞ (3 –≥–æ–ª–æ—Å–∞)
        elif item.get("is_reset", False) and item["votes"] >= 3:
            data["items"] = [create_reset_item()]  # –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–ª–µ–≤–æ–π –ø—É–Ω–∫—Ç
            save_data(data)
            # –†–∞—Å—Å—ã–ª–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—á–∏—Å—Ç–∫–µ
            broadcast_message("‚ôªÔ∏è –í–µ—Å—å —Å–ø–∏—Å–æ–∫ –æ—á–∏—â–µ–Ω!")
            return "‚ôªÔ∏è –í–µ—Å—å —Å–ø–∏—Å–æ–∫ –æ—á–∏—â–µ–Ω!"

        else:
            save_data(data)
            votes_needed = 3 if item.get("is_reset", False) else 2
            return f"‚úÖ –ì–æ–ª–æ—Å —É—á—Ç—ë–Ω. –û—Å—Ç–∞–ª–æ—Å—å: {votes_needed - item['votes']}"

    else:
        return "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞\n" + get_help_message()


# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –±–æ—Ç–∞
def main():
    offset = None
    while True:
        updates = get_updates(offset)
        for update in updates:
            offset = update["update_id"] + 1

            if "message" not in update:
                continue

            message = update["message"]
            chat_id = message["chat"]["id"]
            user_id = message["from"]["id"]

            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –ª—é–±–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
            add_user(user_id)

            if "text" not in message:
                continue

            text = message["text"].strip()
            if not text.startswith("/"):
                continue

            parts = text[1:].split()
            command = parts[0].lower()
            args = parts[1:] if len(parts) > 1 else []

            response = process_command(chat_id, command, args, user_id)
            send_message(chat_id, response)

        sleep(1)


def get_updates(offset=None):
    params = {"timeout": 30}
    if offset:
        params["offset"] = offset
    response = requests.get(API_URL + "getUpdates", params=params)
    return response.json().get("result", [])


if __name__ == "__main__":
    main()
